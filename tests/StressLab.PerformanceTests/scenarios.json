{
  "HttpClientConfiguration": {
    "DefaultHeaders": {
      "Accept": "application/json",
      "User-Agent": "StressLab/1.0",
      "X-Test-Session": "{{sessionId}}",
      "X-Test-Timestamp": "{{timestamp}}"
    },
    "TimeoutMs": 30000,
    "UserAgent": "StressLab Performance Testing Framework/1.0",
    "FollowRedirects": true,
    "MaxRedirects": 5,
    "UseCompression": true,
    "ConnectionPool": {
      "MaxConnectionsPerServer": 20,
      "ConnectionLifetimeSeconds": 300,
      "IdleConnectionTimeoutSeconds": 100
    }
  },
  "TestScenarios": [
    {
      "Name": "Simple API Test",
      "Description": "Prosty test API z prawdziwymi requestami",
      "ExecutionMode": "Parallel",
      "LoadSimulation": {
        "Type": "ConstantRate",
        "Rate": 5,
        "DurationSeconds": 30,
        "RampUpSeconds": 5,
        "MaxConcurrentUsers": 10
      },
      "Steps": [
        {
          "Name": "GET Test",
          "Description": "Test GET request",
          "Type": "HttpApi",
          "Weight": 3,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://httpbin.org/get",
            "Headers": {
              "Accept": "application/json",
              "User-Agent": "StressLab/1.0"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        },
        {
          "Name": "POST Test",
          "Description": "Test POST request",
          "Type": "HttpApi",
          "Weight": 2,
          "Enabled": true,
          "Configuration": {
            "Method": "POST",
            "Url": "https://httpbin.org/post",
            "Headers": {
              "Content-Type": "application/json",
              "Accept": "application/json"
            },
            "Body": {
              "test": "data",
              "timestamp": "{{timestamp}}"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        },
        {
          "Name": "Delay Test",
          "Description": "Test z opóźnieniem",
          "Type": "HttpApi",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://httpbin.org/delay/1",
            "Headers": {
              "Accept": "application/json"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        }
      ],
      "Settings": {
        "ReportGeneration": true,
        "MetricsCollection": true,
        "ErrorThreshold": 5.0
      }
    },
    {
      "Name": "Light API Test",
      "Description": "Bardzo lekki test API z minimalnym obciążeniem",
      "ExecutionMode": "Parallel",
      "LoadSimulation": {
        "Type": "ConstantRate",
        "Rate": 1,
        "DurationSeconds": 10,
        "RampUpSeconds": 2,
        "MaxConcurrentUsers": 2
      },
      "Steps": [
        {
          "Name": "GET Posts",
          "Description": "Test GET request do JSONPlaceholder",
          "Type": "HttpApi",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://jsonplaceholder.typicode.com/posts",
            "Headers": {
              "Accept": "application/json",
              "User-Agent": "StressLab/1.0"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        }
      ],
      "Settings": {
        "ReportGeneration": true,
        "MetricsCollection": true,
        "ErrorThreshold": 5.0
      }
    },
    {
      "Name": "Working API Test",
      "Description": "Test API z działającym endpointem",
      "ExecutionMode": "Parallel",
      "LoadSimulation": {
        "Type": "ConstantRate",
        "Rate": 1,
        "DurationSeconds": 10,
        "RampUpSeconds": 2,
        "MaxConcurrentUsers": 3
      },
      "Steps": [
        {
          "Name": "GET Posts",
          "Description": "Test GET request do JSONPlaceholder",
          "Type": "HttpApi",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://jsonplaceholder.typicode.com/posts",
            "Headers": {
              "Accept": "application/json",
              "User-Agent": "StressLab/1.0"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        }
      ],
      "Settings": {
        "ReportGeneration": true,
        "MetricsCollection": true,
        "ErrorThreshold": 5.0
      }
    },
    {
      "Name": "API Performance Test",
      "Description": "Standard API performance test with multiple endpoints",
      "ExecutionMode": "Parallel",
      "LoadSimulation": {
        "Type": "ConstantRate",
        "Rate": 20,
        "DurationSeconds": 60,
        "RampUpSeconds": 10,
        "MaxConcurrentUsers": 50
      },
      "Steps": [
        {
          "Name": "Get User Data",
          "Description": "Retrieve user information",
          "Type": "HttpApi",
          "Weight": 3,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://httpbin.org/get",
            "Headers": {
              "Accept": "application/json",
              "User-Agent": "StressLab/1.0"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        },
        {
          "Name": "Create User",
          "Description": "Create a new user",
          "Type": "HttpApi",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "Method": "POST",
            "Url": "https://httpbin.org/post",
            "Headers": {
              "Content-Type": "application/json",
              "Accept": "application/json"
            },
            "Body": {
              "name": "Test User",
              "email": "test@example.com"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        }
      ],
      "Settings": {
        "ReportGeneration": true,
        "MetricsCollection": true,
        "ErrorThreshold": 5.0
      }
    },
    {
      "Name": "SQL Performance Test",
      "Description": "Database performance test with multiple procedures",
      "ExecutionMode": "Parallel",
      "LoadSimulation": {
        "Type": "RampUp",
        "Rate": 15,
        "DurationSeconds": 120,
        "RampUpSeconds": 20,
        "MaxConcurrentUsers": 30
      },
      "Steps": [
        {
          "Name": "Get User Data",
          "Description": "Execute stored procedure to get user data",
          "Type": "SqlProcedure",
          "Weight": 2,
          "Enabled": true,
          "Configuration": {
            "ConnectionString": "Server=localhost;Database=TestDB;Integrated Security=true;",
            "ProcedureName": "sp_GetUserData",
            "Parameters": {
              "@UserId": 123,
              "@IncludeDetails": true
            },
            "CommandTimeout": 30,
            "ExpectedExecutionTime": 1000
          }
        },
        {
          "Name": "Update User Status",
          "Description": "Update user status in database",
          "Type": "SqlProcedure",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "ConnectionString": "Server=localhost;Database=TestDB;Integrated Security=true;",
            "ProcedureName": "sp_UpdateUserStatus",
            "Parameters": {
              "@UserId": 123,
              "@Status": "Active"
            },
            "CommandTimeout": 30,
            "ExpectedExecutionTime": 500
          }
        },
        {
          "Name": "Database Connection Test",
          "Description": "Test database connectivity",
          "Type": "DatabaseConnection",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "ConnectionString": "Server=localhost;Database=TestDB;Integrated Security=true;",
            "Timeout": 5000
          }
        }
      ],
      "Settings": {
        "MonitorDatabaseMetrics": true,
        "TrackDeadlocks": true,
        "ConnectionPooling": true
      }
    },
    {
      "Name": "Combined API and SQL Test",
      "Description": "Combined test to measure system impact",
      "ExecutionMode": "Parallel",
      "LoadSimulation": {
        "Type": "Spike",
        "Rate": 25,
        "DurationSeconds": 180,
        "RampUpSeconds": 30,
        "MaxConcurrentUsers": 40,
        "Parameters": {
          "SpikeDuration": 60,
          "SpikeRate": 50
        }
      },
      "Steps": [
        {
          "Name": "API Get Data",
          "Description": "Get data via API",
          "Type": "HttpApi",
          "Weight": 2,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://httpbin.org/get",
            "Headers": {
              "Accept": "application/json"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        },
        {
          "Name": "SQL Process Data",
          "Description": "Process data via SQL procedure",
          "Type": "SqlProcedure",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "ConnectionString": "Server=localhost;Database=TestDB;Integrated Security=true;",
            "ProcedureName": "sp_ProcessData",
            "Parameters": {
              "@DataId": 456,
              "@ProcessType": "Analysis"
            },
            "CommandTimeout": 60,
            "ExpectedExecutionTime": 2000
          }
        },
        {
          "Name": "Wait Between Operations",
          "Description": "Wait between API and SQL operations",
          "Type": "Wait",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "DurationMs": 100,
            "RandomVariation": 50
          }
        }
      ],
      "Settings": {
        "MeasureSystemImpact": true,
        "CorrelateMetrics": true,
        "GenerateImpactReport": true
      }
    },
    {
      "Name": "Sequential Workflow Test",
      "Description": "Test sequential workflow with dependencies",
      "ExecutionMode": "Sequential",
      "LoadSimulation": {
        "Type": "Soak",
        "Rate": 10,
        "DurationSeconds": 300,
        "RampUpSeconds": 15,
        "MaxConcurrentUsers": 20
      },
      "Steps": [
        {
          "Name": "Step 1: Authenticate",
          "Description": "Authenticate user",
          "Type": "HttpApi",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "Method": "POST",
            "Url": "https://httpbin.org/post",
            "Headers": {
              "Content-Type": "application/json"
            },
            "Body": {
              "username": "testuser",
              "password": "testpass"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        },
        {
          "Name": "Step 2: Get User Profile",
          "Description": "Get user profile after authentication",
          "Type": "HttpApi",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://httpbin.org/get",
            "Headers": {
              "Authorization": "Bearer {{token}}",
              "Accept": "application/json"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        },
        {
          "Name": "Step 3: Update Profile",
          "Description": "Update user profile",
          "Type": "HttpApi",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "Method": "PUT",
            "Url": "https://httpbin.org/put",
            "Headers": {
              "Authorization": "Bearer {{token}}",
              "Content-Type": "application/json"
            },
            "Body": {
              "name": "Updated Name",
              "email": "updated@example.com"
            },
            "Timeout": 30000,
            "ExpectedStatusCode": 200
          }
        }
      ],
      "Settings": {
        "VariableSubstitution": true,
        "StepDependencies": true,
        "FailureHandling": "StopOnError"
      }
    },
    {
      "Name": "Weighted Distribution Test",
      "Description": "Test with weighted step distribution",
      "ExecutionMode": "Weighted",
      "LoadSimulation": {
        "Type": "ConstantRate",
        "Rate": 30,
        "DurationSeconds": 90,
        "RampUpSeconds": 15,
        "MaxConcurrentUsers": 60
      },
      "Steps": [
        {
          "Name": "Heavy Operation",
          "Description": "Heavy database operation",
          "Type": "SqlProcedure",
          "Weight": 1,
          "Enabled": true,
          "Configuration": {
            "ConnectionString": "Server=localhost;Database=TestDB;Integrated Security=true;",
            "ProcedureName": "sp_HeavyOperation",
            "Parameters": {
              "@OperationType": "Complex"
            },
            "CommandTimeout": 120,
            "ExpectedExecutionTime": 5000
          }
        },
        {
          "Name": "Light Operation",
          "Description": "Light API operation",
          "Type": "HttpApi",
          "Weight": 5,
          "Enabled": true,
          "Configuration": {
            "Method": "GET",
            "Url": "https://httpbin.org/get",
            "Headers": {
              "Accept": "application/json"
            },
            "Timeout": 10000,
            "ExpectedStatusCode": 200
          }
        },
        {
          "Name": "Medium Operation",
          "Description": "Medium complexity operation",
          "Type": "HttpApi",
          "Weight": 3,
          "Enabled": true,
          "Configuration": {
            "Method": "POST",
            "Url": "https://httpbin.org/post",
            "Headers": {
              "Content-Type": "application/json"
            },
            "Body": {
              "data": "test data"
            },
            "Timeout": 20000,
            "ExpectedStatusCode": 200
          }
        }
      ],
      "Settings": {
        "WeightBasedDistribution": true,
        "DynamicWeightAdjustment": false
      }
    }
  ],
  "GlobalSettings": {
    "DefaultTimeout": 30000,
    "DefaultRetryCount": 3,
    "DefaultRetryDelay": 1000,
    "MetricsCollectionInterval": 1000,
    "ReportGeneration": {
      "Html": true,
      "Json": true,
      "Csv": true
    },
    "Logging": {
      "Level": "Information",
      "IncludeRequestDetails": true,
      "IncludeResponseDetails": false
    },
    "PerformanceThresholds": {
      "MaxResponseTimeMs": 2000,
      "MaxErrorRatePercent": 5.0,
      "MinThroughputPerSecond": 10
    }
  }
}
